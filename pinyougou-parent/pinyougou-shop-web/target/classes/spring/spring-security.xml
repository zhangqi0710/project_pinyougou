<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                                http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
                                http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- 以下页面不被拦截 -->
    <http pattern="/*.html" security="none"></http>
    <http pattern="/css/**" security="none"></http>
    <http pattern="/img/**" security="none"></http>
    <http pattern="/js/**" security="none"></http>
    <http pattern="/plugins/**" security="none"></http>
    <!--注意:不能将商家注册的路径也拦截,否则商家永远无法注册-->
    <http pattern="/seller/add.do" security="none"></http>

    <!--是否启动spel表达式,默认为true-->
    <http use-expressions="false">
    <!-- 页面拦截规则 -->
        <!--访问什么资源需要什么角色-->
        <intercept-url pattern="/**" access="ROLE_SELLER" />
        <!--开启表单登录功能-->
        <!--always-use-default-target：指定了是否在身份验证通过后总是跳转到 default-target-url 属性指定的 URL-->
        <!---->
        <form-login login-page="/shoplogin.html"
                    default-target-url="/admin/index.html"
                    authentication-failure-url="/shoplogin.html"
                    login-processing-url="/login"
                    always-use-default-target="true"/>
        <csrf disabled="true"/>

        <!--退出登录-->
        <logout/>

        <!--如果你在系统中使用了内置框架页,默认是拦截内置框架页的,不拦截需要设置框架页的策略为SAMEORIGIN()同源,即同源的页面一块放行-->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>
    </http>

    <!-- 认证管理器 -->
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder ref="bcryptEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>


    <!--认证类-->
    <beans:bean id="userDetailService" class="com.pinyougou.service.UserDetailsServiceImpl">
        <beans:property name="sellerService" ref="sellerService"></beans:property>
    </beans:bean>

    <!--引用dubbo服务,因为我们认证类注入的是接口,实际上要远程调用该接口实现类的服务-->
    <dubbo:application name="pinyougou-shop-web" />
    <dubbo:registry address="zookeeper://192.168.25.138:2181"/>
    <dubbo:reference id="sellerService" interface="com.pinyougou.sellergoods.service.SellerService"></dubbo:reference>

    <!--配置密码加密类-->
    <beans:bean id="bcryptEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

</beans:beans>